{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_beneficiary",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_percentage",
						"type": "uint256"
					}
				],
				"name": "addBeneficiary",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "beneficiaries",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "percentage",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "hasWithdrawn",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "beneficiaryList",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_beneficiary",
						"type": "address"
					}
				],
				"name": "calculateShare",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBeneficiaries",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "receiveFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "contract EIP20Token",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalDistributed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalShares",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addBeneficiary(address,uint256)": {
					"notice": "Add a new beneficiary or update the percentage of an existing one"
				},
				"calculateShare(address)": {
					"notice": "View beneficiary's share amount"
				},
				"getBeneficiaries()": {
					"notice": "View all beneficiaries"
				},
				"receiveFunds(uint256)": {
					"notice": "Deposit funds for distribution (from CrowdFunding contract)"
				},
				"withdraw()": {
					"notice": "Allow each beneficiary to withdraw their proportional share"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"tema/DistributeFunding.sol": "DistributeFunding"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"tema/DistributeFunding.sol": {
			"keccak256": "0xf46116c9b79aacff10fd3e1e1c0b866a9b7e143b2ef4c5e67cdf864338488032",
			"license": "MIT",
			"urls": [
				"bzz-raw://73066a5cbb197fbf6b3e74acb08dc30cc1f1ba3368635bb5d923877ee73bec77",
				"dweb:/ipfs/QmfMS2RqaUoXmQMZ87q7KeK5VZoDEayrP8ZLXnLTjtupyt"
			]
		},
		"tema/EIP20Token.sol": {
			"keccak256": "0x6016abea78b966ee6d2336afe3674b04a29e4e49dc09004f778798540661bedf",
			"license": "MIT",
			"urls": [
				"bzz-raw://863d2160e88a34b135acc3d6cd1b498d969d66ee064c531bcf229e43093683bb",
				"dweb:/ipfs/QmSR7r4L3UQtfxn3S4tzABJwJ5zT4SEg6faoU5z943D3x6"
			]
		}
	},
	"version": 1
}